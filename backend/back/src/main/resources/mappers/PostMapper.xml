<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdt_final.back.post.dao.PostMapper">
    <!-- saveRow --> 

    <insert id="saveRow"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO POST(USERID, LOCAL, TITLE, CONTENT, RATING, SECRET, HEADERIMG)
        VALUES( #{userId}, #{local}, #{title}, #{content}, #{rating}, #{secret}, #{headerImg})
    </insert>

    <!-- editRow --> 

    <update id="editRow"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO">
        UPDATE POST
        SET 
            LOCAL = #{local},
            TITLE = #{title},
            CONTENT = #{content},
            RATING = #{rating},
            SECRET = #{secret},
            HEADERIMG = #{headerImg}
        WHERE 
            USERID = #{userId} AND POSTID = #{postId}; 
    </update>

    <!-- savePostImage --> 

    <insert id="savePostImage"
            parameterType="com.kdt_final.back.post.domain.postImage.PostImageRequestDTO">
        INSERT INTO POSTIMAGES(POSTID, IMAGEPATH)
        VALUES( #{postId}, #{imagePath})
    </insert>

    <!-- delete -->
    <delete id="delete"
            parameterType="Integer">
        DELETE FROM POST
        WHERE POSTID = #{postId};
    </delete>


    <!-- deletePostImage --> 

    <delete id="deletePostImage"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO">
        DELETE FROM POSTIMAGES
        WHERE POSTID = #{postId};

    </delete>


    <!-- getPost --> 

    <select id="getAllPost"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN USER u ON p.USERID = u.userId
        WHERE p.SECRET = 0
    </select>


    <!-- viewPost --> 

    <select id="viewPost"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN USER u ON p.USERID = u.userId
        WHERE p.POSTID = #{postId}
    </select>

    <!-- getPostImages --> 

    <select id="getPostImages"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.postImage.PostImageResponseDTO">
        SELECT IMAGEPATH
        FROM POSTIMAGES
        WHERE POSTID = #{postId}
    </select>    

    <!-- getPost --> 

    <select id="getPost"
            parameterType="String"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN USER u ON p.USERID = u.userId
        WHERE (p.SECRET = 0) AND (p.LOCAL = #{local})
    </select>    
    
    <!-- likeSave --> 

    <insert id="likeSave"
            parameterType="com.kdt_final.back.post.domain.postLike.PostLikeRequestDTO">
        INSERT INTO POSTLIKE(USERID, POSTID, CREATEDDATE)
        VALUES( #{userId}, #{postId}, CURRENT_DATE)
    </insert>

    <!-- likeDelete --> 

    <delete id="likeDelete"
            parameterType="com.kdt_final.back.post.domain.postLike.PostLikeRequestDTO">
        DELETE FROM POSTLIKE
        WHERE USERID = #{userId} AND POSTID = #{postId};
    </delete>    

    <!-- likeCheck --> 

    <select id="likeCheck"
            parameterType="com.kdt_final.back.post.domain.postLike.PostLikeRequestDTO"
            resultType="int">
        SELECT LIKENO
        FROM POSTLIKE
        WHERE USERID = #{userId} AND POSTID = #{postId};
    </select>    

    <!-- countLike --> 

    <select id="countLike"
            parameterType="int"
            resultType="int">
        SELECT count(*)
        FROM POSTLIKE
        WHERE POSTID = #{postId};
    </select>

    <!-- bookMarkSave --> 

    <insert id="bookMarkSave"
            parameterType="com.kdt_final.back.post.domain.postBookMark.PostBookMarkRequestDTO">
        INSERT INTO POSTBOOKMARK(USERID, POSTID)
        VALUES( #{userId}, #{postId})
    </insert>

    <!-- bookMarkDelete --> 

    <delete id="bookMarkDelete"
            parameterType="com.kdt_final.back.post.domain.postBookMark.PostBookMarkRequestDTO">
        DELETE FROM POSTBOOKMARK
        WHERE USERID = #{userId} AND POSTID = #{postId};
    </delete>   
    
    <!-- bookMarkCheck --> 

    <select id="bookMarkCheck"
            parameterType="com.kdt_final.back.post.domain.postBookMark.PostBookMarkRequestDTO"
            resultType="int">
        SELECT BOOKMARKNO
        FROM POSTBOOKMARK
        WHERE USERID = #{userId} AND POSTID = #{postId};
    </select>   

    <!-- getAllBookMark --> 

    <select id="getAllBookMark"
                parameterType="int"
                resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT 
            p.postId,
            p.userId,
            p.local,
            p.title,
            p.content,
            p.headerImg,
            p.rating,
            pb.createdDate,
            p.updatedDate,
            p.secret,
            u.userNickname
        FROM 
            post p
        JOIN 
            postBookMark pb ON p.postId = pb.postId
        JOIN 
            user u ON p.userId = u.userId
        WHERE 
            pb.userId = #{userId}
    </select>
 

    <!-- getBookMark --> 

    <select id="getBookMark"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
       SELECT 
            p.postId,
            p.userId,
            p.local,
            p.title,
            p.content,
            p.headerImg,
            p.rating,
            pb.createdDate,
            p.updatedDate,
            p.secret,
            u.userNickname
        FROM 
            post p
        JOIN 
            postBookMark pb ON p.postId = pb.postId
        JOIN 
            user u ON p.userId = u.userId
        WHERE 
            pb.userId = #{userId} AND p.local = #{local}
    </select>

     <!-- getAllTravelog --> 

    <select id="getAllTravelog"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN USER u ON p.USERID = u.userId
        WHERE p.USERID = #{userId}
    </select>   

    <!-- getTravelog --> 

    <select id="getTravelog"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN USER u ON p.USERID = u.userId
        WHERE p.USERID = #{userId} AND p.LOCAL = #{local}
       
    </select>

       <!-- getAllFollow --> 

    <select id="getAllFollow"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN FOLLOWS F ON p.USERID = F.FOLLOWEDID
        JOIN  user u ON p.userId = u.userId
        WHERE p.SECRET = 0 AND F.FOLLOWERID = #{userId}
    </select>   

    <!-- getFollow --> 

    <select id="getFollow"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.POSTID, p.USERID, p.LOCAL, p.TITLE, p.RATING, p.SECRET, p.HEADERIMG, p.CONTENT, p.CREATEDDATE, u.userNickname
        FROM POST p
        JOIN FOLLOWS F ON p.USERID = F.FOLLOWEDID
        JOIN  user u ON p.userId = u.userId
        WHERE p.SECRET = 0 AND F.FOLLOWERID = #{userId} AND p.LOCAL = #{local}
       
    </select>


    </mapper>