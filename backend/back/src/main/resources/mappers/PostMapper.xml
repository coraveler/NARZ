<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdt_final.back.post.dao.PostMapper">
    <!-- saveRow --> 

    <insert id="saveRow"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            useGeneratedKeys="true" keyProperty="postId">
        INSERT INTO post(userId, local, title, content, rating, secret, headerImg)
        VALUES( #{userId}, #{local}, #{title}, #{content}, #{rating}, #{secret}, #{headerImg})
    </insert>

    <!-- editRow --> 

    <update id="editRow"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO">
        UPDATE post
        SET 
            local = #{local},
            title = #{title},
            content = #{content},
            rating = #{rating},
            secret = #{secret},
            headerImg = #{headerImg}
        WHERE 
            userId = #{userId} AND postId = #{postId}; 
    </update>

    <!-- savePostImage --> 

    <insert id="savePostImage"
            parameterType="com.kdt_final.back.post.domain.postImage.PostImageRequestDTO">
        INSERT INTO postImages(postId, imagePath)
        VALUES( #{postId}, #{imagePath})
    </insert>

    <!-- delete -->
    <delete id="delete"
            parameterType="Integer">
        DELETE FROM post
        WHERE postId = #{postId};
    </delete>


    <!-- deletePostImage --> 

    <delete id="deletePostImage"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO">
        DELETE FROM postImages
        WHERE postId = #{postId};

    </delete>


    <!-- getPost --> 

    <select id="getAllPost"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.local, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN user u ON p.userId = u.userId
        WHERE p.secret = 0
    </select>


    <!-- viewPost --> 

    <select id="viewPost"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.LOCAL, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN user u ON p.userId = u.userId
        WHERE p.postId = #{postId}
    </select>

    <!-- getPostImages --> 

    <select id="getPostImages"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.postImage.PostImageResponseDTO">
        SELECT imagePath
        FROM postImages
        WHERE postId = #{postId}
    </select>    

    <!-- getPost --> 

    <select id="getPost"
            parameterType="String"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.local, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN user u ON p.userId = u.userId
        WHERE (p.secret = 0) AND (p.local = #{local})
    </select>    
    
    <!-- likeSave --> 

    <insert id="likeSave"
            parameterType="com.kdt_final.back.post.domain.postLike.PostLikeRequestDTO">
        INSERT INTO postLike(userId, postId, createdDate)
        VALUES( #{userId}, #{postId}, CURRENT_DATE)
    </insert>

    <!-- likeDelete --> 

    <delete id="likeDelete"
            parameterType="com.kdt_final.back.post.domain.postLike.PostLikeRequestDTO">
        DELETE FROM postLike
        WHERE userId = #{userId} AND postId = #{postId};
    </delete>    

    <!-- likeCheck --> 

    <select id="likeCheck"
            parameterType="com.kdt_final.back.post.domain.postLike.PostLikeRequestDTO"
            resultType="int">
        SELECT likeNo
        FROM postLike
        WHERE userId = #{userId} AND postId = #{postId};
    </select>    

    <!-- countLike --> 

    <select id="countLike"
            parameterType="int"
            resultType="int">
        SELECT count(*)
        FROM postLike
        WHERE postId = #{postId};
    </select>

    <!-- bookMarkSave --> 

    <insert id="bookMarkSave"
            parameterType="com.kdt_final.back.post.domain.postBookMark.PostBookMarkRequestDTO">
        INSERT INTO postBookMark(userId, postId)
        VALUES( #{userId}, #{postId})
    </insert>

    <!-- bookMarkDelete --> 

    <delete id="bookMarkDelete"
            parameterType="com.kdt_final.back.post.domain.postBookMark.PostBookMarkRequestDTO">
        DELETE FROM postBookMark
        WHERE userId = #{userId} AND postId = #{postId};
    </delete>   
    
    <!-- bookMarkCheck --> 

    <select id="bookMarkCheck"
            parameterType="com.kdt_final.back.post.domain.postBookMark.PostBookMarkRequestDTO"
            resultType="int">
        SELECT bookMarkNo
        FROM postBookMark
        WHERE userId = #{userId} AND postId = #{postId};
    </select>   

    <!-- getAllBookMark --> 

    <select id="getAllBookMark"
                parameterType="int"
                resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT 
            p.postId,
            p.userId,
            p.local,
            p.title,
            p.content,
            p.headerImg,
            p.rating,
            pb.createdDate,
            p.updatedDate,
            p.secret,
            u.userNickname
        FROM 
            post p
        JOIN 
            postBookMark pb ON p.postId = pb.postId
        JOIN 
            user u ON p.userId = u.userId
        WHERE 
            pb.userId = #{userId}
    </select>
 

    <!-- getBookMark --> 

    <select id="getBookMark"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
       SELECT 
            p.postId,
            p.userId,
            p.local,
            p.title,
            p.content,
            p.headerImg,
            p.rating,
            pb.createdDate,
            p.updatedDate,
            p.secret,
            u.userNickname
        FROM 
            post p
        JOIN 
            postBookMark pb ON p.postId = pb.postId
        JOIN 
            user u ON p.userId = u.userId
        WHERE 
            pb.userId = #{userId} AND p.local = #{local}
    </select>

     <!-- getAllTravelog --> 

    <select id="getAllTravelog"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.local, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN user u ON p.userId = u.userId
        WHERE p.userId = #{userId}
    </select>   

    <!-- getTravelog --> 

    <select id="getTravelog"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.local, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN user u ON p.userId = u.userId
        WHERE p.userId = #{userId} AND p.local = #{local}
       
    </select>

       <!-- getAllFollow --> 

    <select id="getAllFollow"
            parameterType="int"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.local, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN follows F ON p.userId = F.followedId
        JOIN  user u ON p.userId = u.userId
        WHERE p.secret = 0 AND F.followerId = #{userId}
    </select>   

    <!-- getFollow --> 

    <select id="getFollow"
            parameterType="com.kdt_final.back.post.domain.PostRequestDTO"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT p.postId, p.userId, p.local, p.title, p.rating, p.secret, p.headerImg, p.content, p.createdDate, u.userNickname
        FROM post p
        JOIN follows F ON p.userId = F.followedId
        JOIN  user u ON p.userId = u.userId
        WHERE p.secret = 0 AND F.followerId = #{userId} AND p.local = #{local}
       
    </select>

    <!-- popularPost -->
    <select id="popularPost"
            resultType="com.kdt_final.back.post.domain.PostResponseDTO">
        SELECT 
            p.postId,
            p.userId,
            p.local,
            p.title,
            p.content,
            p.rating,
            p.secret,
            p.headerImg,
            p.createdDate,
            u.userNickname AS userNickname,
            wr.likes AS likeCount
        FROM 
            weeklyranking wr
        JOIN 
            post p ON wr.postId = p.postId
        JOIN 
            user u ON p.userId = u.userId
        WHERE 
            wr.rankingType = 'popularPost'
        ORDER BY 
            wr.likes DESC
        LIMIT 10;
    </select>

    </mapper>