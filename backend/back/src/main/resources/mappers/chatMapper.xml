<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdt_final.back.chat.dao.ChatMapper">
    
    <!-- lastChatSave -->
    <insert id="saveLastChat"
            parameterType="com.kdt_final.back.chat.domain.ChatRequestDTO">
        INSERT INTO chatchecklastmsg (channelId, loginId, senderId, messageId, sortId)
        VALUES ( #{channelId}, #{loginId}, #{senderId}, #{messageId}, #{sortId} )
        ON DUPLICATE KEY UPDATE  
            senderId = #{senderId},
            loginId = #{loginId},
            messageId = #{messageId},
            sortId = #{sortId};
    </insert>

    <!-- getLastChat -->
    <select id="getLastChat"
            parameterType="com.kdt_final.back.chat.domain.ChatRequestDTO"
            resultType="com.kdt_final.back.chat.domain.ChatResponseDTO">
        SELECT senderId, messageId, sortId, channelId
        FROM chatchecklastmsg
        WHERE channelId = #{channelId} AND loginId = #{loginId}
    </select>

    <!-- saveTotalUnread -->
    <insert id="saveTotalUnread"
            parameterType="com.kdt_final.back.chat.domain.ChatRequestDTO">
        INSERT INTO unread (loginId, totalUnread)
        VALUES ( #{loginId}, #{totalUnread} )
        ON DUPLICATE KEY UPDATE  
            totalUnread = #{totalUnread};
    </insert>

    <!-- getTotalUnread -->
    <select id="getTotalUnread"
            parameterType="String"
            resultType="int">
        SELECT totalUnread
        FROM unread
        WHERE loginId = #{loginId};
    </select>

    <!-- getUserId -->
    <select id="getUserId"
            parameterType="String"
            resultType="com.kdt_final.back.chat.domain.ChatResponseDTO">
        SELECT userId, profileImage
        FROM user
        WHERE loginId = #{loginId};
    </select>

       <!-- saveExitChatRoomTime -->
    <insert id="saveExitChatRoomTime"
            parameterType="com.kdt_final.back.chat.domain.exitchatrommtime.ChatExitRoomTimeRequestDTO">
        INSERT INTO exitchatroomtime (loginId, channelId, createdAt)
        VALUES ( #{loginId}, #{channelId}, #{createdAt} )
        ON DUPLICATE KEY UPDATE  
            createdAt = #{createdAt};
    </insert>

    <!-- getExitChatRoomTime -->
    <select id="getExitChatRoomTime"
            parameterType="com.kdt_final.back.chat.domain.exitchatrommtime.ChatExitRoomTimeRequestDTO"
            resultType = "String">
        SELECT createdAt
        FROM exitchatroomtime
        WHERE channelId = #{channelId} AND loginId = #{loginId}
    </select>

       <!-- saveExitChatRoomTime -->
    <delete id="deleteExitChatRoomTime"
            parameterType="com.kdt_final.back.chat.domain.exitchatrommtime.ChatExitRoomTimeRequestDTO">
        DELETE FROM exitchatroomtime
        WHERE channelId = #{channelId} AND loginId = #{loginId}
    </delete>

</mapper>