<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kdt_final.back.notification.dao.NotificationMapper">

    <select id="getScheduleList"
            parameterType="String"
            resultType="com.kdt_final.back.notification.domain.NotificationResponseDTO">
        SELECT id,title,startDate,startTime,userId
        FROM schedule
        WHERE userId = #{userId}
    </select>

    <insert id="saveMsg"
            parameterType="com.kdt_final.back.notification.domain.NotificationMsgRequestDTO"
            useGeneratedKeys="true" keyProperty="msgId">
        INSERT INTO notificationMessage(msgTitle, msgContent, userId)
        VALUES (#{msgTitle}, #{msgContent}, #{userId})
    </insert>

    <select id="getMsg"
            parameterType="String"
            resultType="com.kdt_final.back.notification.domain.NotificationMsgResponseDTO">
        SELECT *
        FROM notificationMessage
        WHERE userId = #{userId}
    </select>

    <delete id="deleteMsg"
            parameterType="int">
        DELETE FROM notificationMessage
        WHERE msgId = #{msgId}
    </delete>

    <select id="getMapRegion"
            parameterType="com.kdt_final.back.notification.domain.mapRegionNotificationRequestDTO"
            resultType="boolean">
        SELECT COUNT(1) > 0
        FROM mapRegionNotifications
        WHERE region = #{region} AND userId = #{userId}
    </select>

    <insert id="saveMapRegion"
            parameterType="com.kdt_final.back.notification.domain.mapRegionNotificationRequestDTO">
        INSERT INTO mapRegionNotifications (userId, region)
        VALUES (#{userId}, #{region})
    </insert>

    <select id="checkAchievementNotification"
            parameterType="com.kdt_final.back.notification.domain.AchievementNotificationRequestDTO"
            resultType="boolean">
        SELECT COUNT(1) > 0
        FROM achievementNotification
        WHERE achievement = #{achievement} AND userId = #{userId}
    </select>

    <insert id="saveAchievementNotification"
            parameterType="com.kdt_final.back.notification.domain.AchievementNotificationRequestDTO">
        INSERT INTO achievementNotification (userId, achievement)
        VALUES (#{userId}, #{achievement})
    </insert>

    <select id="fetchRankingInfo"
            parameterType="com.kdt_final.back.notification.domain.RankingNotificationRequestDTO"
            resultType="com.kdt_final.back.notification.domain.RankingNotificationResponseDTO">
        SELECT author, ranking, isNotified
        FROM getrankuser
        WHERE author = #{author} AND weekOf = #{weekOf} AND rankingType = #{rankingType}
    </select>

    <select id="fetchPostRanking"
            parameterType="com.kdt_final.back.notification.domain.RankingNotificationRequestDTO"
            resultType="com.kdt_final.back.notification.domain.RankingNotificationResponseDTO">
        SELECT author, ranking, isNotified
        FROM getrankuser
        WHERE author = #{author} AND weekOf = #{weekOf} AND rankingType = #{rankingType}
    </select>

    <update id="updateRankingNotified"
            parameterType="String">
        UPDATE getrankuser
        SET isNotified = true
        WHERE author = #{author}
    </update>

    <select id="fetchHallOfFameInfo"
            parameterType="com.kdt_final.back.notification.domain.HallOfFameNotificationRequestDTO"
            resultType="boolean">
        SELECT COUNT(1) > 0
        FROM hallOfFameNotification
        WHERE author = #{author} AND weekOf = #{weekOf} AND ranking = #{ranking}
    </select>

    <insert id="saveHallOfFameNotification"
            parameterType="com.kdt_final.back.notification.domain.HallOfFameNotificationRequestDTO">
        INSERT INTO hallOfFameNotification(author, ranking, weekOf)
        VALUES (#{author},#{ranking},#{weekOf})
    </insert>

</mapper>